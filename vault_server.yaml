openapi: 3.0.0
info:
  title: Vault Server
  description: Vault Server
  version: 0.1.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /vaults:
    post:
      description: Creates a new vault.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vault"
      responses:
        201:
          description: Vault created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
  /vaults/{vaultID}/docs:
    post:
      description: Encrypts and stores the document in the vault.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        201:
          description: Document encrypted and stored successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
  /vaults/{vaultID}/docs/{docID}:
    get:
      description: The plaintext document.
      responses:
        200:
          description: The plaintext document.
          content:
            application/json:
              schema:
                type: object
  /vaults/{vaultID}/authorizations:
    post:
      description: Create an authorization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Authorization"
      responses:
        201:
          description: Authorization created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
  /vaults/{vaultID}/authorizations/{authorizationID}:
    get:
      description: Fetch an authorization.
      responses:
        200:
          description: An authorization object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorization"
    delete:
      description: Delete an authorization.
      responses:
        200:
          description: Authorization deleted.
components:
  schemas:
    Location:
      type: object
      properties:
        url:
          description: URL of the resource.
          type: string
    Vault:
      type: object
      required:
      properties:
        id:
          type: string
          description: Unique identifier for the vault.
        edv:
          type: string
          description: EDV Vault identifier.
        keystore:
          type: string
          description: WebKMS keystore identifier.
    Document:
      type: object
      required:
        - content
      properties:
        id:
          type: string
        content:
          description: The document to be encrypted and stored in the vault.
          type: object
        tags:
          description: An optional set of tags with which the document would be indexed.
          type: array
          items:
            type: string
        recipients:
          description: An optional set of identifiers for recipient keys that can decrypt the document.
          type: array
          items:
            type: string
    Authorization:
      description: An authorization.
      type: object
      required:
        - scope
        - requestingParties
      properties:
        id:
          type: string
        scope:
          type: array
          items:
            $ref: "#/components/schemas/Scope"
        requestingParty:
          description: TODO keyIDs or opaque identifiers?
          type: string
    Scope:
      type: object
      required:
        - target
        - actions
      properties:
        target:
          type: string
        targetAttr:
          type: string
        actions:
          type: array
          items:
            type: string
        caveats:
          type: array
          items:
            $ref: "#/components/schemas/Caveat"
    Caveat:
      type: object
      properties:
        type:
          type: string
          enum:
            - expiry
    ExpiryCaveat:
      allOf:
        - $ref: "#/components/schemas/Caveat"
        - type: object
          properties:
            duration:
              type: integer
              description: Duration (in seconds) for which this authorization will remain valid.
